Шаблон Декоратор(Decorator)

Цель:

Динамическое добавление новых обязанностей объекту
===========================================================================
Паттерн Декоратор динамически наделяет объект новыми возможностями
и является гибкой альтернативой субклассированию в области расширения функциональности.

Декоратор:
реализует тот же интерфейс или абстрактный класс, что и декорируемый компонент
содержит компонент (ссылка на компонент хранится в переменной экземпляра)
может расширить состояние компонента или добавить новые методы

Для чего используется:

Используется в качеству альтернативы порождению подклассов для расширения функциональности.

===========================================================================

Пример использования:

- динамическое и понятное клиентам добавления обязанностей объектам
- реализация обязанностей, которые могут быть сняты с объекта
- расширение класса путем порождения подклассов невозможно по каким либо причинам

===========================================================================